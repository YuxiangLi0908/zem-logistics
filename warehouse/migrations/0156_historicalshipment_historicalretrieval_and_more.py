# Generated by Django 4.2.7 on 2025-03-03 20:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("warehouse", "0155_customer_address"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalShipment",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "shipment_batch_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "master_batch_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("batch", models.IntegerField(default=0, null=True)),
                (
                    "appointment_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("origin", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=2000, null=True)),
                ("carrier", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "third_party_address",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "is_shipment_schduled",
                    models.BooleanField(blank=True, default=False),
                ),
                ("shipment_schduled_at", models.DateTimeField(blank=True, null=True)),
                ("shipment_appointment", models.DateTimeField(blank=True, null=True)),
                (
                    "shipment_appointment_tz",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "is_shipped",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("shipped_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_full_out",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "is_arrived",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("arrived_at", models.DateTimeField(blank=True, null=True)),
                ("load_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "shipment_account",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shipment_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("total_weight", models.FloatField(default=0, null=True)),
                ("total_cbm", models.FloatField(default=0, null=True)),
                ("total_pallet", models.FloatField(default=0, null=True)),
                ("total_pcs", models.FloatField(default=0, null=True)),
                ("shipped_weight", models.FloatField(blank=True, default=0, null=True)),
                ("shipped_cbm", models.FloatField(blank=True, default=0, null=True)),
                ("shipped_pallet", models.FloatField(default=0, null=True)),
                ("shipped_pcs", models.FloatField(blank=True, default=0, null=True)),
                ("note", models.CharField(blank=True, max_length=1000, null=True)),
                ("pod_link", models.CharField(blank=True, max_length=2000, null=True)),
                ("pod_uploaded_at", models.DateTimeField(blank=True, null=True)),
                ("pallet_dumpped", models.FloatField(blank=True, default=0, null=True)),
                (
                    "abnormal_palletization",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "po_expired",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("in_use", models.BooleanField(blank=True, default=True, null=True)),
                (
                    "is_canceled",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "cancelation_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("priority", models.CharField(blank=True, max_length=10, null=True)),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "status_description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "previous_fleets",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("ARM_BOL", models.CharField(blank=True, max_length=255, null=True)),
                ("ARM_PRO", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fleet_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.fleet",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical shipment",
                "verbose_name_plural": "historical shipments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRetrieval",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("retrieval_id", models.CharField(max_length=255, null=True)),
                (
                    "shipping_order_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "master_bill_of_lading",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("retrive_by_zem", models.BooleanField(blank=True, default=True)),
                (
                    "retrieval_carrier",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "origin_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "destination_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shipping_line",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "retrieval_destination_precise",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("assigned_by_appt", models.BooleanField(blank=True, default=False)),
                (
                    "retrieval_destination_area",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                (
                    "target_retrieval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "target_retrieval_timestamp_lower",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "actual_retrieval_timestamp",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("trucking_fee", models.FloatField(blank=True, null=True)),
                ("chassis_fee", models.FloatField(blank=True, null=True)),
                (
                    "is_trucking_fee_paid",
                    models.BooleanField(blank=True, default=False),
                ),
                ("is_chassis_fee_paid", models.BooleanField(blank=True, default=False)),
                ("trucking_fee_paid_at", models.FloatField(blank=True, null=True)),
                ("chassis_fee_paid_at", models.FloatField(blank=True, null=True)),
                ("note", models.TextField(blank=True, null=True)),
                (
                    "arrive_at_destination",
                    models.BooleanField(blank=True, default=False),
                ),
                ("arrive_at", models.DateTimeField(blank=True, null=True)),
                ("empty_returned", models.BooleanField(blank=True, default=False)),
                ("empty_returned_at", models.DateTimeField(blank=True, null=True)),
                ("temp_t49_lfd", models.DateField(blank=True, null=True)),
                (
                    "temp_t49_available_for_pickup",
                    models.BooleanField(blank=True, default=False),
                ),
                ("temp_t49_pod_arrive_at", models.DateTimeField(blank=True, null=True)),
                (
                    "temp_t49_pod_discharge_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "temp_t49_hold_status",
                    models.BooleanField(blank=True, default=False),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical retrieval",
                "verbose_name_plural": "historical retrievals",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPallet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=2000, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "delivery_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("pallet_id", models.CharField(blank=True, max_length=255, null=True)),
                ("PO_ID", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "shipping_mark",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("fba_id", models.CharField(blank=True, max_length=2000, null=True)),
                ("ref_id", models.CharField(blank=True, max_length=2000, null=True)),
                ("pcs", models.IntegerField(blank=True, null=True)),
                (
                    "sequence_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("length", models.FloatField(blank=True, null=True)),
                ("width", models.FloatField(blank=True, null=True)),
                ("height", models.FloatField(blank=True, null=True)),
                ("cbm", models.FloatField(blank=True, null=True)),
                ("weight_lbs", models.FloatField(blank=True, null=True)),
                (
                    "abnormal_palletization",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "po_expired",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("note", models.CharField(blank=True, max_length=2000, null=True)),
                ("priority", models.CharField(blank=True, max_length=20, null=True)),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_delivery",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoicedelivery",
                    ),
                ),
                (
                    "packing_list",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.packinglist",
                    ),
                ),
                (
                    "shipment_batch_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.shipment",
                    ),
                ),
                (
                    "transfer_batch_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.transferlocation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pallet",
                "verbose_name_plural": "historical pallets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPackingList",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "product_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shipping_mark",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                ("fba_id", models.CharField(blank=True, max_length=400, null=True)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=2000, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "contact_method",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                ("ref_id", models.CharField(blank=True, max_length=400, null=True)),
                ("pcs", models.IntegerField(null=True)),
                ("unit_weight_lbs", models.FloatField(blank=True, null=True)),
                ("total_weight_lbs", models.FloatField(null=True)),
                ("total_weight_kg", models.FloatField(null=True)),
                ("cbm", models.FloatField(null=True)),
                (
                    "n_pallet",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("note", models.CharField(blank=True, max_length=2000, null=True)),
                ("PO_ID", models.CharField(blank=True, max_length=20, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "quote_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.quote",
                    ),
                ),
                (
                    "shipment_batch_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical packing list",
                "verbose_name_plural": "historical packing lists",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalOrder",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("order_id", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField()),
                ("eta", models.DateField(blank=True, null=True)),
                ("order_type", models.CharField(max_length=255, null=True)),
                (
                    "customer_do_link",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("do_sent", models.BooleanField(blank=True, default=False)),
                ("add_to_t49", models.BooleanField(default=False)),
                ("packing_list_updloaded", models.BooleanField(default=False)),
                ("cancel_notification", models.BooleanField(default=False)),
                ("cancel_time", models.DateField(blank=True, null=True)),
                ("invoice_status", models.CharField(max_length=255, null=True)),
                ("invoice_reject", models.BooleanField(default=False)),
                (
                    "invoice_reject_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "clearance_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.clearance",
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "customer_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoice",
                    ),
                ),
                (
                    "offload_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.offload",
                    ),
                ),
                (
                    "retrieval_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.retrieval",
                    ),
                ),
                (
                    "shipment_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.shipment",
                    ),
                ),
                (
                    "vessel_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.vessel",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.zemwarehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical order",
                "verbose_name_plural": "historical orders",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalOffload",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("offload_id", models.CharField(max_length=255, null=True)),
                ("offload_required", models.BooleanField(default=True)),
                ("offload_at", models.DateTimeField(blank=True, null=True)),
                ("total_pallet", models.IntegerField(blank=True, null=True)),
                (
                    "devanning_company",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("devanning_fee", models.FloatField(blank=True, null=True)),
                ("devanning_fee_paid_at", models.DateField(blank=True, null=True)),
                (
                    "is_devanning_fee_paid",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical offload",
                "verbose_name_plural": "historical offloads",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFleet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("fleet_number", models.CharField(max_length=255, null=True)),
                (
                    "fleet_zem_serial",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("amf_id", models.CharField(blank=True, max_length=255, null=True)),
                ("fleet_type", models.CharField(blank=True, max_length=255, null=True)),
                ("origin", models.CharField(blank=True, max_length=255, null=True)),
                ("carrier", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "third_party_address",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "license_plate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "motor_carrier_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("dot_number", models.CharField(blank=True, max_length=100, null=True)),
                ("appointment_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "appointment_datetime_tz",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("departured_at", models.DateTimeField(blank=True, null=True)),
                ("arrived_at", models.DateTimeField(blank=True, null=True)),
                ("total_weight", models.FloatField(null=True)),
                ("total_cbm", models.FloatField(null=True)),
                ("total_pallet", models.FloatField(null=True)),
                ("total_pcs", models.FloatField(null=True)),
                ("note", models.CharField(blank=True, max_length=1000, null=True)),
                ("shipped_weight", models.FloatField(blank=True, default=0, null=True)),
                ("shipped_cbm", models.FloatField(blank=True, default=0, null=True)),
                ("shipped_pallet", models.FloatField(default=0, null=True)),
                ("shipped_pcs", models.FloatField(blank=True, default=0, null=True)),
                ("cost_price", models.FloatField(blank=True, default=0, null=True)),
                (
                    "multipule_destination",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("pod_link", models.CharField(blank=True, max_length=2000, null=True)),
                ("pod_uploaded_at", models.DateTimeField(blank=True, null=True)),
                (
                    "is_canceled",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "cancelation_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "status_description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical fleet",
                "verbose_name_plural": "historical fleets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCustomer",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("zem_name", models.CharField(max_length=200)),
                ("full_name", models.CharField(max_length=200, null=True)),
                ("accounting_name", models.CharField(max_length=200, null=True)),
                ("zem_code", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=30, null=True)),
                ("note", models.CharField(blank=True, max_length=500, null=True)),
                ("address", models.CharField(blank=True, max_length=500, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical customer",
                "verbose_name_plural": "historical customers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContainer",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("container_number", models.CharField(max_length=255, null=True)),
                (
                    "container_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("weight_lbs", models.FloatField(blank=True, null=True)),
                (
                    "is_special_container",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("note", models.CharField(blank=True, max_length=100, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical container",
                "verbose_name_plural": "historical containers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
