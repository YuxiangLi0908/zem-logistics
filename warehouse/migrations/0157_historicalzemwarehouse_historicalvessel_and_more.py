# Generated by Django 4.2.7 on 2025-03-03 20:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("warehouse", "0156_historicalshipment_historicalretrieval_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalZemWarehouse",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("address", models.CharField(max_length=200, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical zem warehouse",
                "verbose_name_plural": "historical zem warehouses",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalVessel",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("vessel_id", models.CharField(max_length=255, null=True)),
                (
                    "master_bill_of_lading",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "origin_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "destination_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shipping_line",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("vessel", models.CharField(blank=True, max_length=100, null=True)),
                ("voyage", models.CharField(blank=True, max_length=100, null=True)),
                ("vessel_etd", models.DateField(blank=True, null=True)),
                ("vessel_eta", models.DateField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical vessel",
                "verbose_name_plural": "historical vessels",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTransferLocation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "shipping_warehouse",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "receiving_warehouse",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("shipping_time", models.DateTimeField(blank=True, null=True)),
                ("ETA", models.DateTimeField(blank=True, null=True)),
                ("arrival_time", models.DateTimeField(blank=True, null=True)),
                (
                    "batch_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "container_number",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("plt_ids", models.CharField(blank=True, max_length=2000, null=True)),
                ("total_pallet", models.IntegerField(blank=True, null=True)),
                ("total_pcs", models.IntegerField(blank=True, null=True)),
                ("total_cbm", models.FloatField(blank=True, null=True)),
                ("total_weight", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical transfer location",
                "verbose_name_plural": "historical transfer locations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalT49Raw",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("received_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.CharField(blank=True, max_length=100, null=True)),
                ("header", models.JSONField(blank=True, null=True)),
                ("body", models.JSONField(blank=True, null=True)),
                ("payload", models.JSONField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical t49 raw",
                "verbose_name_plural": "historical t49 raws",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalShipmentStatus",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "shipment_batch_number_str",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("status_code", models.IntegerField(blank=True, null=True)),
                (
                    "status_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "related_batch_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "related_third_party",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shipment_batch_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical shipment status",
                "verbose_name_plural": "historical shipment statuss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalQuote",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("parent_id", models.CharField(max_length=255, null=True)),
                ("quote_id", models.CharField(max_length=255, null=True)),
                ("platform", models.CharField(blank=True, max_length=255, null=True)),
                ("load_type", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateField(blank=True, null=True)),
                ("pickup_date", models.DateField(blank=True, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.CharField(blank=True, max_length=500, null=True)),
                ("note", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "is_lift_gate",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("is_oversize", models.CharField(blank=True, max_length=10, null=True)),
                ("distance_mile", models.FloatField(blank=True, null=True)),
                ("cost", models.FloatField(blank=True, null=True)),
                ("price", models.FloatField(blank=True, null=True)),
                ("comment", models.CharField(blank=True, max_length=500, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "customer_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.zemwarehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical quote",
                "verbose_name_plural": "historical quotes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPoCheckEtaSeven",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("vessel_eta", models.DateField(blank=True, null=True)),
                (
                    "shipping_mark",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                ("fba_id", models.CharField(blank=True, max_length=400, null=True)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("ref_id", models.CharField(blank=True, max_length=400, null=True)),
                ("last_eta_status", models.BooleanField(default=False)),
                ("last_retrieval_status", models.BooleanField(default=False)),
                ("last_eta_checktime", models.DateTimeField(blank=True, null=True)),
                (
                    "last_retrieval_checktime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("time_status", models.BooleanField(default=False)),
                ("is_notified", models.BooleanField(default=False)),
                ("notified_time", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "handling_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "customer_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "packing_list",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.packinglist",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical po check eta seven",
                "verbose_name_plural": "historical po check eta sevens",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoiceWarehouse",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "sorting",
                    models.FloatField(blank=True, null=True, verbose_name="分拣费"),
                ),
                (
                    "intercept",
                    models.FloatField(blank=True, null=True, verbose_name="拦截费"),
                ),
                (
                    "po_activation",
                    models.FloatField(
                        blank=True, null=True, verbose_name="亚马逊PO激活"
                    ),
                ),
                (
                    "self_pickup",
                    models.FloatField(blank=True, null=True, verbose_name="客户自提"),
                ),
                (
                    "re_pallet",
                    models.FloatField(blank=True, null=True, verbose_name="重新打板"),
                ),
                ("handling", models.FloatField(blank=True, null=True, verbose_name="")),
                (
                    "counting",
                    models.FloatField(blank=True, null=True, verbose_name="货品清点费"),
                ),
                (
                    "warehouse_rent",
                    models.FloatField(blank=True, null=True, verbose_name="仓租"),
                ),
                (
                    "specified_labeling",
                    models.FloatField(blank=True, null=True, verbose_name="指定贴标"),
                ),
                (
                    "inner_outer_box",
                    models.FloatField(blank=True, null=True, verbose_name="内外箱"),
                ),
                (
                    "inner_outer_box_label",
                    models.FloatField(blank=True, null=True, verbose_name=""),
                ),
                (
                    "pallet_label",
                    models.FloatField(blank=True, null=True, verbose_name="托盘标签"),
                ),
                (
                    "open_close_box",
                    models.FloatField(blank=True, null=True, verbose_name="开封箱"),
                ),
                (
                    "destroy",
                    models.FloatField(blank=True, null=True, verbose_name="销毁"),
                ),
                (
                    "take_photo",
                    models.FloatField(blank=True, null=True, verbose_name="拍照"),
                ),
                (
                    "take_video",
                    models.FloatField(blank=True, null=True, verbose_name="拍视频"),
                ),
                (
                    "repeated_operation_fee",
                    models.FloatField(blank=True, null=True, verbose_name="重复操作费"),
                ),
                ("amount", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice warehouse",
                "verbose_name_plural": "historical invoice warehouses",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoiceStatement",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "invoice_statement_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("statement_amount", models.FloatField(blank=True, null=True)),
                ("statement_date", models.DateField(blank=True, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "invoice_terms",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "statement_link",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice statement",
                "verbose_name_plural": "historical invoice statements",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoicePreport",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "pickup",
                    models.FloatField(
                        blank=True, null=True, verbose_name="提拆/打托缠膜"
                    ),
                ),
                (
                    "chassis",
                    models.FloatField(blank=True, null=True, verbose_name="托架费"),
                ),
                (
                    "chassis_split",
                    models.FloatField(blank=True, null=True, verbose_name="托架提取费"),
                ),
                (
                    "prepull",
                    models.FloatField(blank=True, null=True, verbose_name="预提费"),
                ),
                (
                    "yard_storage",
                    models.FloatField(blank=True, null=True, verbose_name="货柜放置费"),
                ),
                (
                    "handling_fee",
                    models.FloatField(blank=True, null=True, verbose_name="操作处理费"),
                ),
                (
                    "pier_pass",
                    models.FloatField(blank=True, null=True, verbose_name="码头"),
                ),
                (
                    "congestion_fee",
                    models.FloatField(blank=True, null=True, verbose_name="港口拥堵费"),
                ),
                (
                    "hanging_crane",
                    models.FloatField(blank=True, null=True, verbose_name="吊柜费"),
                ),
                (
                    "dry_run",
                    models.FloatField(blank=True, null=True, verbose_name="空跑费"),
                ),
                (
                    "exam_fee",
                    models.FloatField(blank=True, null=True, verbose_name="查验费"),
                ),
                (
                    "hazmat",
                    models.FloatField(blank=True, null=True, verbose_name="危险品"),
                ),
                (
                    "over_weight",
                    models.FloatField(blank=True, null=True, verbose_name="超重费"),
                ),
                (
                    "urgent_fee",
                    models.FloatField(blank=True, null=True, verbose_name="加急费"),
                ),
                (
                    "other_serive",
                    models.FloatField(blank=True, null=True, verbose_name="其他服务"),
                ),
                (
                    "demurrage",
                    models.FloatField(blank=True, null=True, verbose_name="港内滞期费"),
                ),
                (
                    "per_diem",
                    models.FloatField(blank=True, null=True, verbose_name="港外滞期费"),
                ),
                (
                    "second_pickup",
                    models.FloatField(blank=True, null=True, verbose_name="二次提货"),
                ),
                ("amount", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice preport",
                "verbose_name_plural": "historical invoice preports",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoiceItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "warehouse_code",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("cbm", models.FloatField(blank=True, null=True)),
                ("weight", models.FloatField(blank=True, null=True)),
                ("qty", models.FloatField(blank=True, null=True)),
                ("rate", models.FloatField(blank=True, null=True)),
                ("amount", models.FloatField(blank=True, null=True)),
                ("note", models.CharField(blank=True, max_length=2000, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice item",
                "verbose_name_plural": "historical invoice items",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoiceDelivery",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "invoice_delivery",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("type", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("zipcode", models.CharField(blank=True, max_length=200, null=True)),
                ("total_pallet", models.FloatField(blank=True, null=True)),
                ("total_cbm", models.FloatField(blank=True, null=True)),
                ("total_weight_lbs", models.FloatField(blank=True, null=True)),
                ("total_cost", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice delivery",
                "verbose_name_plural": "historical invoice deliverys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalInvoice",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("invoice_date", models.DateField(blank=True, null=True)),
                (
                    "invoice_link",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("total_amount", models.FloatField(blank=True, null=True)),
                ("preport_amount", models.FloatField(blank=True, null=True)),
                ("warehouse_amount", models.FloatField(blank=True, null=True)),
                ("delivery_amount", models.FloatField(blank=True, null=True)),
                ("direct_amount", models.FloatField(blank=True, null=True)),
                ("received_amount", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.customer",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "statement_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.invoicestatement",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical invoice",
                "verbose_name_plural": "historical invoices",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFleetShipmentPallet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "fleet_number_str",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "shipment_batch_number_str",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pallet_id_str",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fleet_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.fleet",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pallet_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.pallet",
                    ),
                ),
                (
                    "shipment_batch_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical fleet shipment pallet",
                "verbose_name_plural": "historical fleet shipment pallets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalClearance",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("clearance_id", models.CharField(max_length=255, null=True)),
                ("is_clearance_required", models.BooleanField(default=True)),
                ("clear_by_zem", models.BooleanField(default=True)),
                (
                    "clearance_agent",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("cleared_at", models.DateTimeField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical clearance",
                "verbose_name_plural": "historical clearances",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAbnormalOffloadStatus",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("confirmed_by_warehouse", models.BooleanField(default=False)),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "delivery_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("pcs_reported", models.IntegerField(blank=True, null=True)),
                ("pcs_actual", models.IntegerField(blank=True, null=True)),
                (
                    "abnormal_reason",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("note", models.CharField(blank=True, max_length=1000, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "container_number",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.container",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "offload",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="warehouse.offload",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical abnormal offload status",
                "verbose_name_plural": "historical abnormal offload statuss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
